// Generated by jextract

package io.github.kgpu.wgpuj;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import jdk.incubator.foreign.*;

import static jdk.incubator.foreign.CLinker.*;
class wgpu_h_constants_0 {

    /* package-private */ wgpu_h_constants_0() {}
    static final LibraryLookup[] LIBRARIES = RuntimeHelper.libraries(new String[] {
    });

    static final int _VCRT_COMPILER_PREPROCESSOR() { return (int)1L; }

    static final int _SAL_VERSION() { return (int)20L; }

    static final int __SAL_H_VERSION() { return (int)180000000L; }

    static final int _USE_DECLSPECS_FOR_SAL() { return (int)0L; }

    static final int _USE_ATTRIBUTES_FOR_SAL() { return (int)0L; }

    static final int _CRT_PACKING() { return (int)8L; }

    static final int _HAS_EXCEPTIONS() { return (int)1L; }

    static final int _HAS_CXX17() { return (int)0L; }

    static final int _HAS_CXX20() { return (int)0L; }

    static final int _HAS_NODISCARD() { return (int)0L; }

    static final int WCHAR_MIN() { return (int)0L; }

    static final int WCHAR_MAX() { return (int)65535L; }

    static final int WINT_MIN() { return (int)0L; }

    static final int WINT_MAX() { return (int)65535L; }

    static final int true_() { return (int)1L; }

    static final int false_() { return (int)0L; }

    static final int __bool_true_false_are_defined() { return (int)1L; }

    static final FunctionDescriptor __va_start$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor __va_start$FUNC() { return __va_start$FUNC_; }

    static final MethodHandle __va_start$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__va_start",
        "(Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)V",
        __va_start$FUNC_, true
    );
    static final java.lang.invoke.MethodHandle __va_start$MH() { return __va_start$MH_; }

    static final FunctionDescriptor __security_init_cookie$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor __security_init_cookie$FUNC() { return __security_init_cookie$FUNC_; }

    static final MethodHandle __security_init_cookie$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__security_init_cookie",
        "()V",
        __security_init_cookie$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __security_init_cookie$MH() { return __security_init_cookie$MH_; }

    static final FunctionDescriptor __security_check_cookie$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __security_check_cookie$FUNC() { return __security_check_cookie$FUNC_; }

    static final MethodHandle __security_check_cookie$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__security_check_cookie",
        "(J)V",
        __security_check_cookie$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __security_check_cookie$MH() { return __security_check_cookie$MH_; }

    static final FunctionDescriptor __report_gsfailure$FUNC_ = FunctionDescriptor.ofVoid(
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor __report_gsfailure$FUNC() { return __report_gsfailure$FUNC_; }

    static final MethodHandle __report_gsfailure$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "__report_gsfailure",
        "(J)V",
        __report_gsfailure$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle __report_gsfailure$MH() { return __report_gsfailure$MH_; }

    static final MemoryLayout __security_cookie$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout __security_cookie$LAYOUT() { return __security_cookie$LAYOUT_; }

    static final VarHandle __security_cookie$VH_ = __security_cookie$LAYOUT_.varHandle(long.class);
    static final java.lang.invoke.VarHandle __security_cookie$VH() { return __security_cookie$VH_; }

    static final MemorySegment __security_cookie$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "__security_cookie", __security_cookie$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment __security_cookie$SEGMENT() { return __security_cookie$SEGMENT_; }

    static final int WGPUAdapterType_DiscreteGPU() { return (int)0L; }

    static final int WGPUAdapterType_IntegratedGPU() { return (int)1L; }

    static final int WGPUAdapterType_CPU() { return (int)2L; }

    static final int WGPUAdapterType_Unknown() { return (int)3L; }

    static final int WGPUAdapterType_Force32() { return (int)2147483647L; }

    static final int WGPUAddressMode_Repeat() { return (int)0L; }

    static final int WGPUAddressMode_MirrorRepeat() { return (int)1L; }

    static final int WGPUAddressMode_ClampToEdge() { return (int)2L; }

    static final int WGPUAddressMode_Force32() { return (int)2147483647L; }

    static final int WGPUBackendType_Null() { return (int)0L; }

    static final int WGPUBackendType_D3D11() { return (int)1L; }

    static final int WGPUBackendType_D3D12() { return (int)2L; }

    static final int WGPUBackendType_Metal() { return (int)3L; }

    static final int WGPUBackendType_Vulkan() { return (int)4L; }

    static final int WGPUBackendType_OpenGL() { return (int)5L; }

    static final int WGPUBackendType_OpenGLES() { return (int)6L; }

    static final int WGPUBackendType_Force32() { return (int)2147483647L; }

    static final int WGPUBlendFactor_Zero() { return (int)0L; }

    static final int WGPUBlendFactor_One() { return (int)1L; }

    static final int WGPUBlendFactor_SrcColor() { return (int)2L; }

    static final int WGPUBlendFactor_OneMinusSrcColor() { return (int)3L; }

    static final int WGPUBlendFactor_SrcAlpha() { return (int)4L; }

    static final int WGPUBlendFactor_OneMinusSrcAlpha() { return (int)5L; }

    static final int WGPUBlendFactor_DstColor() { return (int)6L; }

    static final int WGPUBlendFactor_OneMinusDstColor() { return (int)7L; }

    static final int WGPUBlendFactor_DstAlpha() { return (int)8L; }

    static final int WGPUBlendFactor_OneMinusDstAlpha() { return (int)9L; }

    static final int WGPUBlendFactor_SrcAlphaSaturated() { return (int)10L; }

    static final int WGPUBlendFactor_BlendColor() { return (int)11L; }

    static final int WGPUBlendFactor_OneMinusBlendColor() { return (int)12L; }

    static final int WGPUBlendFactor_Force32() { return (int)2147483647L; }

    static final int WGPUBlendOperation_Add() { return (int)0L; }

    static final int WGPUBlendOperation_Subtract() { return (int)1L; }

    static final int WGPUBlendOperation_ReverseSubtract() { return (int)2L; }

    static final int WGPUBlendOperation_Min() { return (int)3L; }

    static final int WGPUBlendOperation_Max() { return (int)4L; }

    static final int WGPUBlendOperation_Force32() { return (int)2147483647L; }

    static final int WGPUBufferBindingType_Undefined() { return (int)0L; }

    static final int WGPUBufferBindingType_Uniform() { return (int)1L; }

    static final int WGPUBufferBindingType_Storage() { return (int)2L; }

    static final int WGPUBufferBindingType_ReadOnlyStorage() { return (int)3L; }

    static final int WGPUBufferBindingType_Force32() { return (int)2147483647L; }

    static final int WGPUBufferMapAsyncStatus_Success() { return (int)0L; }

    static final int WGPUBufferMapAsyncStatus_Error() { return (int)1L; }

    static final int WGPUBufferMapAsyncStatus_Unknown() { return (int)2L; }

    static final int WGPUBufferMapAsyncStatus_DeviceLost() { return (int)3L; }

    static final int WGPUBufferMapAsyncStatus_DestroyedBeforeCallback() { return (int)4L; }

    static final int WGPUBufferMapAsyncStatus_UnmappedBeforeCallback() { return (int)5L; }

    static final int WGPUBufferMapAsyncStatus_Force32() { return (int)2147483647L; }

    static final int WGPUCompareFunction_Undefined() { return (int)0L; }

    static final int WGPUCompareFunction_Never() { return (int)1L; }

    static final int WGPUCompareFunction_Less() { return (int)2L; }

    static final int WGPUCompareFunction_LessEqual() { return (int)3L; }

    static final int WGPUCompareFunction_Greater() { return (int)4L; }

    static final int WGPUCompareFunction_GreaterEqual() { return (int)5L; }

    static final int WGPUCompareFunction_Equal() { return (int)6L; }

    static final int WGPUCompareFunction_NotEqual() { return (int)7L; }

    static final int WGPUCompareFunction_Always() { return (int)8L; }

    static final int WGPUCompareFunction_Force32() { return (int)2147483647L; }

    static final int WGPUCreatePipelineAsyncStatus_Success() { return (int)0L; }

    static final int WGPUCreatePipelineAsyncStatus_Error() { return (int)1L; }

    static final int WGPUCreatePipelineAsyncStatus_DeviceLost() { return (int)2L; }

    static final int WGPUCreatePipelineAsyncStatus_DeviceDestroyed() { return (int)3L; }

    static final int WGPUCreatePipelineAsyncStatus_Unknown() { return (int)4L; }

    static final int WGPUCreatePipelineAsyncStatus_Force32() { return (int)2147483647L; }

    static final int WGPUCullMode_None() { return (int)0L; }

    static final int WGPUCullMode_Front() { return (int)1L; }

    static final int WGPUCullMode_Back() { return (int)2L; }

    static final int WGPUCullMode_Force32() { return (int)2147483647L; }

    static final int WGPUErrorFilter_None() { return (int)0L; }

    static final int WGPUErrorFilter_Validation() { return (int)1L; }

    static final int WGPUErrorFilter_OutOfMemory() { return (int)2L; }

    static final int WGPUErrorFilter_Force32() { return (int)2147483647L; }

    static final int WGPUErrorType_NoError() { return (int)0L; }

    static final int WGPUErrorType_Validation() { return (int)1L; }

    static final int WGPUErrorType_OutOfMemory() { return (int)2L; }

    static final int WGPUErrorType_Unknown() { return (int)3L; }

    static final int WGPUErrorType_DeviceLost() { return (int)4L; }

    static final int WGPUErrorType_Force32() { return (int)2147483647L; }

    static final int WGPUFilterMode_Nearest() { return (int)0L; }

    static final int WGPUFilterMode_Linear() { return (int)1L; }

    static final int WGPUFilterMode_Force32() { return (int)2147483647L; }

    static final int WGPUFrontFace_CCW() { return (int)0L; }

    static final int WGPUFrontFace_CW() { return (int)1L; }

    static final int WGPUFrontFace_Force32() { return (int)2147483647L; }

    static final int WGPUIndexFormat_Undefined() { return (int)0L; }

    static final int WGPUIndexFormat_Uint16() { return (int)1L; }

    static final int WGPUIndexFormat_Uint32() { return (int)2L; }

    static final int WGPUIndexFormat_Force32() { return (int)2147483647L; }

    static final int WGPUInputStepMode_Vertex() { return (int)0L; }

    static final int WGPUInputStepMode_Instance() { return (int)1L; }

    static final int WGPUInputStepMode_Force32() { return (int)2147483647L; }

    static final int WGPULoadOp_Clear() { return (int)0L; }

    static final int WGPULoadOp_Load() { return (int)1L; }

    static final int WGPULoadOp_Force32() { return (int)2147483647L; }

    static final int WGPUPipelineStatisticName_VertexShaderInvocations() { return (int)0L; }

    static final int WGPUPipelineStatisticName_ClipperInvocations() { return (int)1L; }

    static final int WGPUPipelineStatisticName_ClipperPrimitivesOut() { return (int)2L; }

    static final int WGPUPipelineStatisticName_FragmentShaderInvocations() { return (int)3L; }

    static final int WGPUPipelineStatisticName_ComputeShaderInvocations() { return (int)4L; }

    static final int WGPUPipelineStatisticName_Force32() { return (int)2147483647L; }

    static final int WGPUPresentMode_Immediate() { return (int)0L; }

    static final int WGPUPresentMode_Mailbox() { return (int)1L; }

    static final int WGPUPresentMode_Fifo() { return (int)2L; }

    static final int WGPUPresentMode_Force32() { return (int)2147483647L; }

    static final int WGPUPrimitiveTopology_PointList() { return (int)0L; }

    static final int WGPUPrimitiveTopology_LineList() { return (int)1L; }

    static final int WGPUPrimitiveTopology_LineStrip() { return (int)2L; }

    static final int WGPUPrimitiveTopology_TriangleList() { return (int)3L; }

    static final int WGPUPrimitiveTopology_TriangleStrip() { return (int)4L; }

    static final int WGPUPrimitiveTopology_Force32() { return (int)2147483647L; }

    static final int WGPUQueryType_Occlusion() { return (int)0L; }

    static final int WGPUQueryType_PipelineStatistics() { return (int)1L; }

    static final int WGPUQueryType_Timestamp() { return (int)2L; }

    static final int WGPUQueryType_Force32() { return (int)2147483647L; }

    static final int WGPUQueueWorkDoneStatus_Success() { return (int)0L; }

    static final int WGPUQueueWorkDoneStatus_Error() { return (int)1L; }

    static final int WGPUQueueWorkDoneStatus_Unknown() { return (int)2L; }

    static final int WGPUQueueWorkDoneStatus_DeviceLost() { return (int)3L; }

    static final int WGPUQueueWorkDoneStatus_Force32() { return (int)2147483647L; }

    static final int WGPUSType_Invalid() { return (int)0L; }

    static final int WGPUSType_SurfaceDescriptorFromMetalLayer() { return (int)1L; }

    static final int WGPUSType_SurfaceDescriptorFromWindowsHWND() { return (int)2L; }

    static final int WGPUSType_SurfaceDescriptorFromXlib() { return (int)3L; }

    static final int WGPUSType_SurfaceDescriptorFromCanvasHTMLSelector() { return (int)4L; }

    static final int WGPUSType_ShaderModuleSPIRVDescriptor() { return (int)5L; }

    static final int WGPUSType_ShaderModuleWGSLDescriptor() { return (int)6L; }

    static final int WGPUSType_Force32() { return (int)2147483647L; }

    static final int WGPUSamplerBindingType_Undefined() { return (int)0L; }

    static final int WGPUSamplerBindingType_Filtering() { return (int)1L; }

    static final int WGPUSamplerBindingType_NonFiltering() { return (int)2L; }

    static final int WGPUSamplerBindingType_Comparison() { return (int)3L; }

    static final int WGPUSamplerBindingType_Force32() { return (int)2147483647L; }

    static final int WGPUStencilOperation_Keep() { return (int)0L; }

    static final int WGPUStencilOperation_Zero() { return (int)1L; }

    static final int WGPUStencilOperation_Replace() { return (int)2L; }

    static final int WGPUStencilOperation_Invert() { return (int)3L; }

    static final int WGPUStencilOperation_IncrementClamp() { return (int)4L; }

    static final int WGPUStencilOperation_DecrementClamp() { return (int)5L; }

    static final int WGPUStencilOperation_IncrementWrap() { return (int)6L; }

    static final int WGPUStencilOperation_DecrementWrap() { return (int)7L; }

    static final int WGPUStencilOperation_Force32() { return (int)2147483647L; }

    static final int WGPUStorageTextureAccess_Undefined() { return (int)0L; }

    static final int WGPUStorageTextureAccess_ReadOnly() { return (int)1L; }

    static final int WGPUStorageTextureAccess_WriteOnly() { return (int)2L; }

    static final int WGPUStorageTextureAccess_Force32() { return (int)2147483647L; }

    static final int WGPUStoreOp_Store() { return (int)0L; }

    static final int WGPUStoreOp_Clear() { return (int)1L; }

    static final int WGPUStoreOp_Force32() { return (int)2147483647L; }

    static final int WGPUTextureAspect_All() { return (int)0L; }

    static final int WGPUTextureAspect_StencilOnly() { return (int)1L; }

    static final int WGPUTextureAspect_DepthOnly() { return (int)2L; }

    static final int WGPUTextureAspect_Force32() { return (int)2147483647L; }

    static final int WGPUTextureComponentType_Float() { return (int)0L; }

    static final int WGPUTextureComponentType_Sint() { return (int)1L; }

    static final int WGPUTextureComponentType_Uint() { return (int)2L; }

    static final int WGPUTextureComponentType_DepthComparison() { return (int)3L; }

    static final int WGPUTextureComponentType_Force32() { return (int)2147483647L; }

    static final int WGPUTextureDimension_1D() { return (int)0L; }

    static final int WGPUTextureDimension_2D() { return (int)1L; }

    static final int WGPUTextureDimension_3D() { return (int)2L; }

    static final int WGPUTextureDimension_Force32() { return (int)2147483647L; }

    static final int WGPUTextureFormat_Undefined() { return (int)0L; }

    static final int WGPUTextureFormat_R8Unorm() { return (int)1L; }

    static final int WGPUTextureFormat_R8Snorm() { return (int)2L; }

    static final int WGPUTextureFormat_R8Uint() { return (int)3L; }

    static final int WGPUTextureFormat_R8Sint() { return (int)4L; }

    static final int WGPUTextureFormat_R16Uint() { return (int)5L; }

    static final int WGPUTextureFormat_R16Sint() { return (int)6L; }

    static final int WGPUTextureFormat_R16Float() { return (int)7L; }

    static final int WGPUTextureFormat_RG8Unorm() { return (int)8L; }

    static final int WGPUTextureFormat_RG8Snorm() { return (int)9L; }

    static final int WGPUTextureFormat_RG8Uint() { return (int)10L; }

    static final int WGPUTextureFormat_RG8Sint() { return (int)11L; }

    static final int WGPUTextureFormat_R32Float() { return (int)12L; }

    static final int WGPUTextureFormat_R32Uint() { return (int)13L; }

    static final int WGPUTextureFormat_R32Sint() { return (int)14L; }

    static final int WGPUTextureFormat_RG16Uint() { return (int)15L; }

    static final int WGPUTextureFormat_RG16Sint() { return (int)16L; }

    static final int WGPUTextureFormat_RG16Float() { return (int)17L; }

    static final int WGPUTextureFormat_RGBA8Unorm() { return (int)18L; }

    static final int WGPUTextureFormat_RGBA8UnormSrgb() { return (int)19L; }

    static final int WGPUTextureFormat_RGBA8Snorm() { return (int)20L; }

    static final int WGPUTextureFormat_RGBA8Uint() { return (int)21L; }

    static final int WGPUTextureFormat_RGBA8Sint() { return (int)22L; }

    static final int WGPUTextureFormat_BGRA8Unorm() { return (int)23L; }

    static final int WGPUTextureFormat_BGRA8UnormSrgb() { return (int)24L; }

    static final int WGPUTextureFormat_RGB10A2Unorm() { return (int)25L; }

    static final int WGPUTextureFormat_RG11B10Ufloat() { return (int)26L; }

    static final int WGPUTextureFormat_RGB9E5Ufloat() { return (int)27L; }

    static final int WGPUTextureFormat_RG32Float() { return (int)28L; }

    static final int WGPUTextureFormat_RG32Uint() { return (int)29L; }

    static final int WGPUTextureFormat_RG32Sint() { return (int)30L; }

    static final int WGPUTextureFormat_RGBA16Uint() { return (int)31L; }

    static final int WGPUTextureFormat_RGBA16Sint() { return (int)32L; }

    static final int WGPUTextureFormat_RGBA16Float() { return (int)33L; }

    static final int WGPUTextureFormat_RGBA32Float() { return (int)34L; }

    static final int WGPUTextureFormat_RGBA32Uint() { return (int)35L; }

    static final int WGPUTextureFormat_RGBA32Sint() { return (int)36L; }

    static final int WGPUTextureFormat_Depth32Float() { return (int)37L; }

    static final int WGPUTextureFormat_Depth24Plus() { return (int)38L; }

    static final int WGPUTextureFormat_Depth24PlusStencil8() { return (int)39L; }

    static final int WGPUTextureFormat_Stencil8() { return (int)40L; }

    static final int WGPUTextureFormat_BC1RGBAUnorm() { return (int)41L; }

    static final int WGPUTextureFormat_BC1RGBAUnormSrgb() { return (int)42L; }

    static final int WGPUTextureFormat_BC2RGBAUnorm() { return (int)43L; }

    static final int WGPUTextureFormat_BC2RGBAUnormSrgb() { return (int)44L; }

    static final int WGPUTextureFormat_BC3RGBAUnorm() { return (int)45L; }

    static final int WGPUTextureFormat_BC3RGBAUnormSrgb() { return (int)46L; }

    static final int WGPUTextureFormat_BC4RUnorm() { return (int)47L; }

    static final int WGPUTextureFormat_BC4RSnorm() { return (int)48L; }

    static final int WGPUTextureFormat_BC5RGUnorm() { return (int)49L; }

    static final int WGPUTextureFormat_BC5RGSnorm() { return (int)50L; }

    static final int WGPUTextureFormat_BC6HRGBUfloat() { return (int)51L; }

    static final int WGPUTextureFormat_BC6HRGBFloat() { return (int)52L; }

    static final int WGPUTextureFormat_BC7RGBAUnorm() { return (int)53L; }

    static final int WGPUTextureFormat_BC7RGBAUnormSrgb() { return (int)54L; }

    static final int WGPUTextureFormat_Force32() { return (int)2147483647L; }

    static final int WGPUTextureSampleType_Undefined() { return (int)0L; }

    static final int WGPUTextureSampleType_Float() { return (int)1L; }

    static final int WGPUTextureSampleType_UnfilterableFloat() { return (int)2L; }

    static final int WGPUTextureSampleType_Depth() { return (int)3L; }

    static final int WGPUTextureSampleType_Sint() { return (int)4L; }

    static final int WGPUTextureSampleType_Uint() { return (int)5L; }

    static final int WGPUTextureSampleType_Force32() { return (int)2147483647L; }

    static final int WGPUTextureViewDimension_Undefined() { return (int)0L; }

    static final int WGPUTextureViewDimension_1D() { return (int)1L; }

    static final int WGPUTextureViewDimension_2D() { return (int)2L; }

    static final int WGPUTextureViewDimension_2DArray() { return (int)3L; }

    static final int WGPUTextureViewDimension_Cube() { return (int)4L; }

    static final int WGPUTextureViewDimension_CubeArray() { return (int)5L; }

    static final int WGPUTextureViewDimension_3D() { return (int)6L; }

    static final int WGPUTextureViewDimension_Force32() { return (int)2147483647L; }

    static final int WGPUVertexFormat_Undefined() { return (int)0L; }

    static final int WGPUVertexFormat_Uint8x2() { return (int)1L; }

    static final int WGPUVertexFormat_Uint8x4() { return (int)2L; }

    static final int WGPUVertexFormat_Sint8x2() { return (int)3L; }

    static final int WGPUVertexFormat_Sint8x4() { return (int)4L; }

    static final int WGPUVertexFormat_Unorm8x2() { return (int)5L; }

    static final int WGPUVertexFormat_Unorm8x4() { return (int)6L; }

    static final int WGPUVertexFormat_Snorm8x2() { return (int)7L; }

    static final int WGPUVertexFormat_Snorm8x4() { return (int)8L; }

    static final int WGPUVertexFormat_Uint16x2() { return (int)9L; }

    static final int WGPUVertexFormat_Uint16x4() { return (int)10L; }

    static final int WGPUVertexFormat_Sint16x2() { return (int)11L; }

    static final int WGPUVertexFormat_Sint16x4() { return (int)12L; }

    static final int WGPUVertexFormat_Unorm16x2() { return (int)13L; }

    static final int WGPUVertexFormat_Unorm16x4() { return (int)14L; }

    static final int WGPUVertexFormat_Snorm16x2() { return (int)15L; }

    static final int WGPUVertexFormat_Snorm16x4() { return (int)16L; }

    static final int WGPUVertexFormat_Float16x2() { return (int)17L; }

    static final int WGPUVertexFormat_Float16x4() { return (int)18L; }

    static final int WGPUVertexFormat_Float32() { return (int)19L; }

    static final int WGPUVertexFormat_Float32x2() { return (int)20L; }

    static final int WGPUVertexFormat_Float32x3() { return (int)21L; }

    static final int WGPUVertexFormat_Float32x4() { return (int)22L; }

    static final int WGPUVertexFormat_Uint32() { return (int)23L; }

    static final int WGPUVertexFormat_Uint32x2() { return (int)24L; }

    static final int WGPUVertexFormat_Uint32x3() { return (int)25L; }

    static final int WGPUVertexFormat_Uint32x4() { return (int)26L; }

    static final int WGPUVertexFormat_Sint32() { return (int)27L; }

    static final int WGPUVertexFormat_Sint32x2() { return (int)28L; }

    static final int WGPUVertexFormat_Sint32x3() { return (int)29L; }

    static final int WGPUVertexFormat_Sint32x4() { return (int)30L; }

    static final int WGPUVertexFormat_Force32() { return (int)2147483647L; }

    static final int WGPUBufferUsage_None() { return (int)0L; }

    static final int WGPUBufferUsage_MapRead() { return (int)1L; }

    static final int WGPUBufferUsage_MapWrite() { return (int)2L; }

    static final int WGPUBufferUsage_CopySrc() { return (int)4L; }

    static final int WGPUBufferUsage_CopyDst() { return (int)8L; }

    static final int WGPUBufferUsage_Index() { return (int)16L; }

    static final int WGPUBufferUsage_Vertex() { return (int)32L; }

    static final int WGPUBufferUsage_Uniform() { return (int)64L; }

    static final int WGPUBufferUsage_Storage() { return (int)128L; }

    static final int WGPUBufferUsage_Indirect() { return (int)256L; }

    static final int WGPUBufferUsage_QueryResolve() { return (int)512L; }

    static final int WGPUBufferUsage_Force32() { return (int)2147483647L; }

    static final int WGPUColorWriteMask_None() { return (int)0L; }

    static final int WGPUColorWriteMask_Red() { return (int)1L; }

    static final int WGPUColorWriteMask_Green() { return (int)2L; }

    static final int WGPUColorWriteMask_Blue() { return (int)4L; }

    static final int WGPUColorWriteMask_Alpha() { return (int)8L; }

    static final int WGPUColorWriteMask_All() { return (int)15L; }

    static final int WGPUColorWriteMask_Force32() { return (int)2147483647L; }

    static final int WGPUMapMode_Read() { return (int)1L; }

    static final int WGPUMapMode_Write() { return (int)2L; }

    static final int WGPUMapMode_Force32() { return (int)2147483647L; }

    static final int WGPUShaderStage_None() { return (int)0L; }

    static final int WGPUShaderStage_Vertex() { return (int)1L; }

    static final int WGPUShaderStage_Fragment() { return (int)2L; }

    static final int WGPUShaderStage_Compute() { return (int)4L; }

    static final int WGPUShaderStage_Force32() { return (int)2147483647L; }

    static final int WGPUTextureUsage_None() { return (int)0L; }

    static final int WGPUTextureUsage_CopySrc() { return (int)1L; }

    static final int WGPUTextureUsage_CopyDst() { return (int)2L; }

    static final int WGPUTextureUsage_Sampled() { return (int)4L; }

    static final int WGPUTextureUsage_Storage() { return (int)8L; }

    static final int WGPUTextureUsage_RenderAttachment() { return (int)16L; }

    static final int WGPUTextureUsage_Force32() { return (int)2147483647L; }

    static final MemoryLayout WGPUChainedStruct$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("next"),
        C_INT.withName("sType"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUChainedStruct");
    static final jdk.incubator.foreign.MemoryLayout WGPUChainedStruct$struct$LAYOUT() { return WGPUChainedStruct$struct$LAYOUT_; }

    static final MemoryLayout WGPUChainedStruct$next$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUChainedStruct$next$LAYOUT() { return WGPUChainedStruct$next$LAYOUT_; }

    static final VarHandle WGPUChainedStruct$next$VH_ = MemoryHandles.asAddressVarHandle(WGPUChainedStruct$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("next")));
    static final java.lang.invoke.VarHandle WGPUChainedStruct$next$VH() { return WGPUChainedStruct$next$VH_; }

    static final MemoryLayout WGPUChainedStruct$sType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUChainedStruct$sType$LAYOUT() { return WGPUChainedStruct$sType$LAYOUT_; }

    static final VarHandle WGPUChainedStruct$sType$VH_ = WGPUChainedStruct$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sType"));
    static final java.lang.invoke.VarHandle WGPUChainedStruct$sType$VH() { return WGPUChainedStruct$sType$VH_; }

    static final MemoryLayout WGPUAdapterProperties$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("deviceID"),
        C_INT.withName("vendorID"),
        C_POINTER.withName("name"),
        C_POINTER.withName("driverDescription"),
        C_INT.withName("adapterType"),
        C_INT.withName("backendType")
    ).withName("WGPUAdapterProperties");
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$struct$LAYOUT() { return WGPUAdapterProperties$struct$LAYOUT_; }

    static final MemoryLayout WGPUAdapterProperties$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$nextInChain$LAYOUT() { return WGPUAdapterProperties$nextInChain$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUAdapterProperties$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$nextInChain$VH() { return WGPUAdapterProperties$nextInChain$VH_; }

    static final MemoryLayout WGPUAdapterProperties$deviceID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$deviceID$LAYOUT() { return WGPUAdapterProperties$deviceID$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$deviceID$VH_ = WGPUAdapterProperties$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("deviceID"));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$deviceID$VH() { return WGPUAdapterProperties$deviceID$VH_; }

    static final MemoryLayout WGPUAdapterProperties$vendorID$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$vendorID$LAYOUT() { return WGPUAdapterProperties$vendorID$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$vendorID$VH_ = WGPUAdapterProperties$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("vendorID"));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$vendorID$VH() { return WGPUAdapterProperties$vendorID$VH_; }

    static final MemoryLayout WGPUAdapterProperties$name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$name$LAYOUT() { return WGPUAdapterProperties$name$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$name$VH_ = MemoryHandles.asAddressVarHandle(WGPUAdapterProperties$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("name")));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$name$VH() { return WGPUAdapterProperties$name$VH_; }

    static final MemoryLayout WGPUAdapterProperties$driverDescription$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$driverDescription$LAYOUT() { return WGPUAdapterProperties$driverDescription$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$driverDescription$VH_ = MemoryHandles.asAddressVarHandle(WGPUAdapterProperties$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("driverDescription")));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$driverDescription$VH() { return WGPUAdapterProperties$driverDescription$VH_; }

    static final MemoryLayout WGPUAdapterProperties$adapterType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$adapterType$LAYOUT() { return WGPUAdapterProperties$adapterType$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$adapterType$VH_ = WGPUAdapterProperties$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("adapterType"));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$adapterType$VH() { return WGPUAdapterProperties$adapterType$VH_; }

    static final MemoryLayout WGPUAdapterProperties$backendType$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUAdapterProperties$backendType$LAYOUT() { return WGPUAdapterProperties$backendType$LAYOUT_; }

    static final VarHandle WGPUAdapterProperties$backendType$VH_ = WGPUAdapterProperties$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("backendType"));
    static final java.lang.invoke.VarHandle WGPUAdapterProperties$backendType$VH() { return WGPUAdapterProperties$backendType$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("binding"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("buffer"),
        C_LONG_LONG.withName("offset"),
        C_LONG_LONG.withName("size"),
        C_POINTER.withName("sampler"),
        C_POINTER.withName("textureView")
    ).withName("WGPUBindGroupEntry");
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$struct$LAYOUT() { return WGPUBindGroupEntry$struct$LAYOUT_; }

    static final MemoryLayout WGPUBindGroupEntry$binding$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$binding$LAYOUT() { return WGPUBindGroupEntry$binding$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$binding$VH_ = WGPUBindGroupEntry$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("binding"));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$binding$VH() { return WGPUBindGroupEntry$binding$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$buffer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$buffer$LAYOUT() { return WGPUBindGroupEntry$buffer$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$buffer$VH_ = MemoryHandles.asAddressVarHandle(WGPUBindGroupEntry$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("buffer")));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$buffer$VH() { return WGPUBindGroupEntry$buffer$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$offset$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$offset$LAYOUT() { return WGPUBindGroupEntry$offset$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$offset$VH_ = WGPUBindGroupEntry$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("offset"));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$offset$VH() { return WGPUBindGroupEntry$offset$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$size$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$size$LAYOUT() { return WGPUBindGroupEntry$size$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$size$VH_ = WGPUBindGroupEntry$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("size"));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$size$VH() { return WGPUBindGroupEntry$size$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$sampler$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$sampler$LAYOUT() { return WGPUBindGroupEntry$sampler$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$sampler$VH_ = MemoryHandles.asAddressVarHandle(WGPUBindGroupEntry$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("sampler")));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$sampler$VH() { return WGPUBindGroupEntry$sampler$VH_; }

    static final MemoryLayout WGPUBindGroupEntry$textureView$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBindGroupEntry$textureView$LAYOUT() { return WGPUBindGroupEntry$textureView$LAYOUT_; }

    static final VarHandle WGPUBindGroupEntry$textureView$VH_ = MemoryHandles.asAddressVarHandle(WGPUBindGroupEntry$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("textureView")));
    static final java.lang.invoke.VarHandle WGPUBindGroupEntry$textureView$VH() { return WGPUBindGroupEntry$textureView$VH_; }

    static final MemoryLayout WGPUBlendComponent$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("srcFactor"),
        C_INT.withName("dstFactor"),
        C_INT.withName("operation")
    ).withName("WGPUBlendComponent");
    static final jdk.incubator.foreign.MemoryLayout WGPUBlendComponent$struct$LAYOUT() { return WGPUBlendComponent$struct$LAYOUT_; }

    static final MemoryLayout WGPUBlendComponent$srcFactor$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBlendComponent$srcFactor$LAYOUT() { return WGPUBlendComponent$srcFactor$LAYOUT_; }

    static final VarHandle WGPUBlendComponent$srcFactor$VH_ = WGPUBlendComponent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("srcFactor"));
    static final java.lang.invoke.VarHandle WGPUBlendComponent$srcFactor$VH() { return WGPUBlendComponent$srcFactor$VH_; }

    static final MemoryLayout WGPUBlendComponent$dstFactor$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBlendComponent$dstFactor$LAYOUT() { return WGPUBlendComponent$dstFactor$LAYOUT_; }

    static final VarHandle WGPUBlendComponent$dstFactor$VH_ = WGPUBlendComponent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("dstFactor"));
    static final java.lang.invoke.VarHandle WGPUBlendComponent$dstFactor$VH() { return WGPUBlendComponent$dstFactor$VH_; }

    static final MemoryLayout WGPUBlendComponent$operation$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBlendComponent$operation$LAYOUT() { return WGPUBlendComponent$operation$LAYOUT_; }

    static final VarHandle WGPUBlendComponent$operation$VH_ = WGPUBlendComponent$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("operation"));
    static final java.lang.invoke.VarHandle WGPUBlendComponent$operation$VH() { return WGPUBlendComponent$operation$VH_; }

    static final MemoryLayout WGPUBufferBindingLayout$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("type"),
        C_CHAR.withName("hasDynamicOffset"),
        MemoryLayout.ofPaddingBits(24),
        C_LONG_LONG.withName("minBindingSize")
    ).withName("WGPUBufferBindingLayout");
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferBindingLayout$struct$LAYOUT() { return WGPUBufferBindingLayout$struct$LAYOUT_; }

    static final MemoryLayout WGPUBufferBindingLayout$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferBindingLayout$nextInChain$LAYOUT() { return WGPUBufferBindingLayout$nextInChain$LAYOUT_; }

    static final VarHandle WGPUBufferBindingLayout$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUBufferBindingLayout$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUBufferBindingLayout$nextInChain$VH() { return WGPUBufferBindingLayout$nextInChain$VH_; }

    static final MemoryLayout WGPUBufferBindingLayout$type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferBindingLayout$type$LAYOUT() { return WGPUBufferBindingLayout$type$LAYOUT_; }

    static final VarHandle WGPUBufferBindingLayout$type$VH_ = WGPUBufferBindingLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    static final java.lang.invoke.VarHandle WGPUBufferBindingLayout$type$VH() { return WGPUBufferBindingLayout$type$VH_; }

    static final MemoryLayout WGPUBufferBindingLayout$hasDynamicOffset$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferBindingLayout$hasDynamicOffset$LAYOUT() { return WGPUBufferBindingLayout$hasDynamicOffset$LAYOUT_; }

    static final VarHandle WGPUBufferBindingLayout$hasDynamicOffset$VH_ = WGPUBufferBindingLayout$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("hasDynamicOffset"));
    static final java.lang.invoke.VarHandle WGPUBufferBindingLayout$hasDynamicOffset$VH() { return WGPUBufferBindingLayout$hasDynamicOffset$VH_; }

    static final MemoryLayout WGPUBufferBindingLayout$minBindingSize$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferBindingLayout$minBindingSize$LAYOUT() { return WGPUBufferBindingLayout$minBindingSize$LAYOUT_; }

    static final VarHandle WGPUBufferBindingLayout$minBindingSize$VH_ = WGPUBufferBindingLayout$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("minBindingSize"));
    static final java.lang.invoke.VarHandle WGPUBufferBindingLayout$minBindingSize$VH() { return WGPUBufferBindingLayout$minBindingSize$VH_; }

    static final MemoryLayout WGPUBufferDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("usage"),
        MemoryLayout.ofPaddingBits(32),
        C_LONG_LONG.withName("size"),
        C_CHAR.withName("mappedAtCreation"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("WGPUBufferDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$struct$LAYOUT() { return WGPUBufferDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUBufferDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$nextInChain$LAYOUT() { return WGPUBufferDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUBufferDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUBufferDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUBufferDescriptor$nextInChain$VH() { return WGPUBufferDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUBufferDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$label$LAYOUT() { return WGPUBufferDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUBufferDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUBufferDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUBufferDescriptor$label$VH() { return WGPUBufferDescriptor$label$VH_; }

    static final MemoryLayout WGPUBufferDescriptor$usage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$usage$LAYOUT() { return WGPUBufferDescriptor$usage$LAYOUT_; }

    static final VarHandle WGPUBufferDescriptor$usage$VH_ = WGPUBufferDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("usage"));
    static final java.lang.invoke.VarHandle WGPUBufferDescriptor$usage$VH() { return WGPUBufferDescriptor$usage$VH_; }

    static final MemoryLayout WGPUBufferDescriptor$size$LAYOUT_ = C_LONG_LONG;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$size$LAYOUT() { return WGPUBufferDescriptor$size$LAYOUT_; }

    static final VarHandle WGPUBufferDescriptor$size$VH_ = WGPUBufferDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("size"));
    static final java.lang.invoke.VarHandle WGPUBufferDescriptor$size$VH() { return WGPUBufferDescriptor$size$VH_; }

    static final MemoryLayout WGPUBufferDescriptor$mappedAtCreation$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout WGPUBufferDescriptor$mappedAtCreation$LAYOUT() { return WGPUBufferDescriptor$mappedAtCreation$LAYOUT_; }

    static final VarHandle WGPUBufferDescriptor$mappedAtCreation$VH_ = WGPUBufferDescriptor$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("mappedAtCreation"));
    static final java.lang.invoke.VarHandle WGPUBufferDescriptor$mappedAtCreation$VH() { return WGPUBufferDescriptor$mappedAtCreation$VH_; }

    static final MemoryLayout WGPUColor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_DOUBLE.withName("r"),
        C_DOUBLE.withName("g"),
        C_DOUBLE.withName("b"),
        C_DOUBLE.withName("a")
    ).withName("WGPUColor");
    static final jdk.incubator.foreign.MemoryLayout WGPUColor$struct$LAYOUT() { return WGPUColor$struct$LAYOUT_; }

    static final MemoryLayout WGPUColor$r$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout WGPUColor$r$LAYOUT() { return WGPUColor$r$LAYOUT_; }

    static final VarHandle WGPUColor$r$VH_ = WGPUColor$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("r"));
    static final java.lang.invoke.VarHandle WGPUColor$r$VH() { return WGPUColor$r$VH_; }

    static final MemoryLayout WGPUColor$g$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout WGPUColor$g$LAYOUT() { return WGPUColor$g$LAYOUT_; }

    static final VarHandle WGPUColor$g$VH_ = WGPUColor$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("g"));
    static final java.lang.invoke.VarHandle WGPUColor$g$VH() { return WGPUColor$g$VH_; }

    static final MemoryLayout WGPUColor$b$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout WGPUColor$b$LAYOUT() { return WGPUColor$b$LAYOUT_; }

    static final VarHandle WGPUColor$b$VH_ = WGPUColor$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("b"));
    static final java.lang.invoke.VarHandle WGPUColor$b$VH() { return WGPUColor$b$VH_; }

    static final MemoryLayout WGPUColor$a$LAYOUT_ = C_DOUBLE;
    static final jdk.incubator.foreign.MemoryLayout WGPUColor$a$LAYOUT() { return WGPUColor$a$LAYOUT_; }

    static final VarHandle WGPUColor$a$VH_ = WGPUColor$struct$LAYOUT_.varHandle(double.class, MemoryLayout.PathElement.groupElement("a"));
    static final java.lang.invoke.VarHandle WGPUColor$a$VH() { return WGPUColor$a$VH_; }

    static final MemoryLayout WGPUCommandBufferDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPUCommandBufferDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandBufferDescriptor$struct$LAYOUT() { return WGPUCommandBufferDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUCommandBufferDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandBufferDescriptor$nextInChain$LAYOUT() { return WGPUCommandBufferDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUCommandBufferDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUCommandBufferDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUCommandBufferDescriptor$nextInChain$VH() { return WGPUCommandBufferDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUCommandBufferDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandBufferDescriptor$label$LAYOUT() { return WGPUCommandBufferDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUCommandBufferDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUCommandBufferDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUCommandBufferDescriptor$label$VH() { return WGPUCommandBufferDescriptor$label$VH_; }

    static final MemoryLayout WGPUCommandEncoderDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPUCommandEncoderDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandEncoderDescriptor$struct$LAYOUT() { return WGPUCommandEncoderDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUCommandEncoderDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandEncoderDescriptor$nextInChain$LAYOUT() { return WGPUCommandEncoderDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUCommandEncoderDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUCommandEncoderDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUCommandEncoderDescriptor$nextInChain$VH() { return WGPUCommandEncoderDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUCommandEncoderDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUCommandEncoderDescriptor$label$LAYOUT() { return WGPUCommandEncoderDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUCommandEncoderDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUCommandEncoderDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUCommandEncoderDescriptor$label$VH() { return WGPUCommandEncoderDescriptor$label$VH_; }

    static final MemoryLayout WGPUComputePassDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPUComputePassDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUComputePassDescriptor$struct$LAYOUT() { return WGPUComputePassDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUComputePassDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUComputePassDescriptor$nextInChain$LAYOUT() { return WGPUComputePassDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUComputePassDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUComputePassDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUComputePassDescriptor$nextInChain$VH() { return WGPUComputePassDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUComputePassDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUComputePassDescriptor$label$LAYOUT() { return WGPUComputePassDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUComputePassDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUComputePassDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUComputePassDescriptor$label$VH() { return WGPUComputePassDescriptor$label$VH_; }

    static final MemoryLayout WGPUDeviceDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain")
    ).withName("WGPUDeviceDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUDeviceDescriptor$struct$LAYOUT() { return WGPUDeviceDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUDeviceDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUDeviceDescriptor$nextInChain$LAYOUT() { return WGPUDeviceDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUDeviceDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUDeviceDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUDeviceDescriptor$nextInChain$VH() { return WGPUDeviceDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUExtent3D$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("width"),
        C_INT.withName("height"),
        C_INT.withName("depth")
    ).withName("WGPUExtent3D");
    static final jdk.incubator.foreign.MemoryLayout WGPUExtent3D$struct$LAYOUT() { return WGPUExtent3D$struct$LAYOUT_; }

    static final MemoryLayout WGPUExtent3D$width$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUExtent3D$width$LAYOUT() { return WGPUExtent3D$width$LAYOUT_; }

    static final VarHandle WGPUExtent3D$width$VH_ = WGPUExtent3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("width"));
    static final java.lang.invoke.VarHandle WGPUExtent3D$width$VH() { return WGPUExtent3D$width$VH_; }

    static final MemoryLayout WGPUExtent3D$height$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUExtent3D$height$LAYOUT() { return WGPUExtent3D$height$LAYOUT_; }

    static final VarHandle WGPUExtent3D$height$VH_ = WGPUExtent3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("height"));
    static final java.lang.invoke.VarHandle WGPUExtent3D$height$VH() { return WGPUExtent3D$height$VH_; }

    static final MemoryLayout WGPUExtent3D$depth$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUExtent3D$depth$LAYOUT() { return WGPUExtent3D$depth$LAYOUT_; }

    static final VarHandle WGPUExtent3D$depth$VH_ = WGPUExtent3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("depth"));
    static final java.lang.invoke.VarHandle WGPUExtent3D$depth$VH() { return WGPUExtent3D$depth$VH_; }

    static final MemoryLayout WGPUInstanceDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain")
    ).withName("WGPUInstanceDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUInstanceDescriptor$struct$LAYOUT() { return WGPUInstanceDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUInstanceDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUInstanceDescriptor$nextInChain$LAYOUT() { return WGPUInstanceDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUInstanceDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUInstanceDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUInstanceDescriptor$nextInChain$VH() { return WGPUInstanceDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUMultisampleState$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("count"),
        C_INT.withName("mask"),
        C_CHAR.withName("alphaToCoverageEnabled"),
        MemoryLayout.ofPaddingBits(56)
    ).withName("WGPUMultisampleState");
    static final jdk.incubator.foreign.MemoryLayout WGPUMultisampleState$struct$LAYOUT() { return WGPUMultisampleState$struct$LAYOUT_; }

    static final MemoryLayout WGPUMultisampleState$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUMultisampleState$nextInChain$LAYOUT() { return WGPUMultisampleState$nextInChain$LAYOUT_; }

    static final VarHandle WGPUMultisampleState$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUMultisampleState$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUMultisampleState$nextInChain$VH() { return WGPUMultisampleState$nextInChain$VH_; }

    static final MemoryLayout WGPUMultisampleState$count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUMultisampleState$count$LAYOUT() { return WGPUMultisampleState$count$LAYOUT_; }

    static final VarHandle WGPUMultisampleState$count$VH_ = WGPUMultisampleState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("count"));
    static final java.lang.invoke.VarHandle WGPUMultisampleState$count$VH() { return WGPUMultisampleState$count$VH_; }

    static final MemoryLayout WGPUMultisampleState$mask$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUMultisampleState$mask$LAYOUT() { return WGPUMultisampleState$mask$LAYOUT_; }

    static final VarHandle WGPUMultisampleState$mask$VH_ = WGPUMultisampleState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mask"));
    static final java.lang.invoke.VarHandle WGPUMultisampleState$mask$VH() { return WGPUMultisampleState$mask$VH_; }

    static final MemoryLayout WGPUMultisampleState$alphaToCoverageEnabled$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout WGPUMultisampleState$alphaToCoverageEnabled$LAYOUT() { return WGPUMultisampleState$alphaToCoverageEnabled$LAYOUT_; }

    static final VarHandle WGPUMultisampleState$alphaToCoverageEnabled$VH_ = WGPUMultisampleState$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("alphaToCoverageEnabled"));
    static final java.lang.invoke.VarHandle WGPUMultisampleState$alphaToCoverageEnabled$VH() { return WGPUMultisampleState$alphaToCoverageEnabled$VH_; }

    static final MemoryLayout WGPUOrigin3D$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("x"),
        C_INT.withName("y"),
        C_INT.withName("z")
    ).withName("WGPUOrigin3D");
    static final jdk.incubator.foreign.MemoryLayout WGPUOrigin3D$struct$LAYOUT() { return WGPUOrigin3D$struct$LAYOUT_; }

    static final MemoryLayout WGPUOrigin3D$x$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUOrigin3D$x$LAYOUT() { return WGPUOrigin3D$x$LAYOUT_; }

    static final VarHandle WGPUOrigin3D$x$VH_ = WGPUOrigin3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("x"));
    static final java.lang.invoke.VarHandle WGPUOrigin3D$x$VH() { return WGPUOrigin3D$x$VH_; }

    static final MemoryLayout WGPUOrigin3D$y$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUOrigin3D$y$LAYOUT() { return WGPUOrigin3D$y$LAYOUT_; }

    static final VarHandle WGPUOrigin3D$y$VH_ = WGPUOrigin3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("y"));
    static final java.lang.invoke.VarHandle WGPUOrigin3D$y$VH() { return WGPUOrigin3D$y$VH_; }

    static final MemoryLayout WGPUOrigin3D$z$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUOrigin3D$z$LAYOUT() { return WGPUOrigin3D$z$LAYOUT_; }

    static final VarHandle WGPUOrigin3D$z$VH_ = WGPUOrigin3D$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("z"));
    static final java.lang.invoke.VarHandle WGPUOrigin3D$z$VH() { return WGPUOrigin3D$z$VH_; }

    static final MemoryLayout WGPUPipelineLayoutDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("bindGroupLayoutCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("bindGroupLayouts")
    ).withName("WGPUPipelineLayoutDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUPipelineLayoutDescriptor$struct$LAYOUT() { return WGPUPipelineLayoutDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUPipelineLayoutDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUPipelineLayoutDescriptor$nextInChain$LAYOUT() { return WGPUPipelineLayoutDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUPipelineLayoutDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUPipelineLayoutDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUPipelineLayoutDescriptor$nextInChain$VH() { return WGPUPipelineLayoutDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUPipelineLayoutDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUPipelineLayoutDescriptor$label$LAYOUT() { return WGPUPipelineLayoutDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUPipelineLayoutDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUPipelineLayoutDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUPipelineLayoutDescriptor$label$VH() { return WGPUPipelineLayoutDescriptor$label$VH_; }

    static final MemoryLayout WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$LAYOUT() { return WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$LAYOUT_; }

    static final VarHandle WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$VH_ = WGPUPipelineLayoutDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("bindGroupLayoutCount"));
    static final java.lang.invoke.VarHandle WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$VH() { return WGPUPipelineLayoutDescriptor$bindGroupLayoutCount$VH_; }

    static final MemoryLayout WGPUPipelineLayoutDescriptor$bindGroupLayouts$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUPipelineLayoutDescriptor$bindGroupLayouts$LAYOUT() { return WGPUPipelineLayoutDescriptor$bindGroupLayouts$LAYOUT_; }

    static final VarHandle WGPUPipelineLayoutDescriptor$bindGroupLayouts$VH_ = MemoryHandles.asAddressVarHandle(WGPUPipelineLayoutDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("bindGroupLayouts")));
    static final java.lang.invoke.VarHandle WGPUPipelineLayoutDescriptor$bindGroupLayouts$VH() { return WGPUPipelineLayoutDescriptor$bindGroupLayouts$VH_; }

    static final MemoryLayout WGPUPrimitiveState$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("topology"),
        C_INT.withName("stripIndexFormat"),
        C_INT.withName("frontFace"),
        C_INT.withName("cullMode")
    ).withName("WGPUPrimitiveState");
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$struct$LAYOUT() { return WGPUPrimitiveState$struct$LAYOUT_; }

    static final MemoryLayout WGPUPrimitiveState$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$nextInChain$LAYOUT() { return WGPUPrimitiveState$nextInChain$LAYOUT_; }

    static final VarHandle WGPUPrimitiveState$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUPrimitiveState$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUPrimitiveState$nextInChain$VH() { return WGPUPrimitiveState$nextInChain$VH_; }

    static final MemoryLayout WGPUPrimitiveState$topology$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$topology$LAYOUT() { return WGPUPrimitiveState$topology$LAYOUT_; }

    static final VarHandle WGPUPrimitiveState$topology$VH_ = WGPUPrimitiveState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("topology"));
    static final java.lang.invoke.VarHandle WGPUPrimitiveState$topology$VH() { return WGPUPrimitiveState$topology$VH_; }

    static final MemoryLayout WGPUPrimitiveState$stripIndexFormat$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$stripIndexFormat$LAYOUT() { return WGPUPrimitiveState$stripIndexFormat$LAYOUT_; }

    static final VarHandle WGPUPrimitiveState$stripIndexFormat$VH_ = WGPUPrimitiveState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("stripIndexFormat"));
    static final java.lang.invoke.VarHandle WGPUPrimitiveState$stripIndexFormat$VH() { return WGPUPrimitiveState$stripIndexFormat$VH_; }

    static final MemoryLayout WGPUPrimitiveState$frontFace$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$frontFace$LAYOUT() { return WGPUPrimitiveState$frontFace$LAYOUT_; }

    static final VarHandle WGPUPrimitiveState$frontFace$VH_ = WGPUPrimitiveState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("frontFace"));
    static final java.lang.invoke.VarHandle WGPUPrimitiveState$frontFace$VH() { return WGPUPrimitiveState$frontFace$VH_; }

    static final MemoryLayout WGPUPrimitiveState$cullMode$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUPrimitiveState$cullMode$LAYOUT() { return WGPUPrimitiveState$cullMode$LAYOUT_; }

    static final VarHandle WGPUPrimitiveState$cullMode$VH_ = WGPUPrimitiveState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("cullMode"));
    static final java.lang.invoke.VarHandle WGPUPrimitiveState$cullMode$VH() { return WGPUPrimitiveState$cullMode$VH_; }

    static final MemoryLayout WGPUProgrammableStageDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("module"),
        C_POINTER.withName("entryPoint")
    ).withName("WGPUProgrammableStageDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUProgrammableStageDescriptor$struct$LAYOUT() { return WGPUProgrammableStageDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUProgrammableStageDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUProgrammableStageDescriptor$nextInChain$LAYOUT() { return WGPUProgrammableStageDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUProgrammableStageDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUProgrammableStageDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUProgrammableStageDescriptor$nextInChain$VH() { return WGPUProgrammableStageDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUProgrammableStageDescriptor$module$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUProgrammableStageDescriptor$module$LAYOUT() { return WGPUProgrammableStageDescriptor$module$LAYOUT_; }

    static final VarHandle WGPUProgrammableStageDescriptor$module$VH_ = MemoryHandles.asAddressVarHandle(WGPUProgrammableStageDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("module")));
    static final java.lang.invoke.VarHandle WGPUProgrammableStageDescriptor$module$VH() { return WGPUProgrammableStageDescriptor$module$VH_; }

    static final MemoryLayout WGPUProgrammableStageDescriptor$entryPoint$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUProgrammableStageDescriptor$entryPoint$LAYOUT() { return WGPUProgrammableStageDescriptor$entryPoint$LAYOUT_; }

    static final VarHandle WGPUProgrammableStageDescriptor$entryPoint$VH_ = MemoryHandles.asAddressVarHandle(WGPUProgrammableStageDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("entryPoint")));
    static final java.lang.invoke.VarHandle WGPUProgrammableStageDescriptor$entryPoint$VH() { return WGPUProgrammableStageDescriptor$entryPoint$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("type"),
        C_INT.withName("count"),
        C_POINTER.withName("pipelineStatistics"),
        C_INT.withName("pipelineStatisticsCount"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUQuerySetDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$struct$LAYOUT() { return WGPUQuerySetDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUQuerySetDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$nextInChain$LAYOUT() { return WGPUQuerySetDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$nextInChain$VH() { return WGPUQuerySetDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$label$LAYOUT() { return WGPUQuerySetDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$label$VH() { return WGPUQuerySetDescriptor$label$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$type$LAYOUT() { return WGPUQuerySetDescriptor$type$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$type$VH_ = WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$type$VH() { return WGPUQuerySetDescriptor$type$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$count$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$count$LAYOUT() { return WGPUQuerySetDescriptor$count$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$count$VH_ = WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("count"));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$count$VH() { return WGPUQuerySetDescriptor$count$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$pipelineStatistics$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$pipelineStatistics$LAYOUT() { return WGPUQuerySetDescriptor$pipelineStatistics$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$pipelineStatistics$VH_ = MemoryHandles.asAddressVarHandle(WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("pipelineStatistics")));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$pipelineStatistics$VH() { return WGPUQuerySetDescriptor$pipelineStatistics$VH_; }

    static final MemoryLayout WGPUQuerySetDescriptor$pipelineStatisticsCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUQuerySetDescriptor$pipelineStatisticsCount$LAYOUT() { return WGPUQuerySetDescriptor$pipelineStatisticsCount$LAYOUT_; }

    static final VarHandle WGPUQuerySetDescriptor$pipelineStatisticsCount$VH_ = WGPUQuerySetDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("pipelineStatisticsCount"));
    static final java.lang.invoke.VarHandle WGPUQuerySetDescriptor$pipelineStatisticsCount$VH() { return WGPUQuerySetDescriptor$pipelineStatisticsCount$VH_; }

    static final MemoryLayout WGPURenderBundleDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPURenderBundleDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleDescriptor$struct$LAYOUT() { return WGPURenderBundleDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPURenderBundleDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleDescriptor$nextInChain$LAYOUT() { return WGPURenderBundleDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPURenderBundleDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderBundleDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPURenderBundleDescriptor$nextInChain$VH() { return WGPURenderBundleDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPURenderBundleDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleDescriptor$label$LAYOUT() { return WGPURenderBundleDescriptor$label$LAYOUT_; }

    static final VarHandle WGPURenderBundleDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderBundleDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPURenderBundleDescriptor$label$VH() { return WGPURenderBundleDescriptor$label$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("colorFormatsCount"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("colorFormats"),
        C_INT.withName("depthStencilFormat"),
        C_INT.withName("sampleCount")
    ).withName("WGPURenderBundleEncoderDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$struct$LAYOUT() { return WGPURenderBundleEncoderDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$nextInChain$LAYOUT() { return WGPURenderBundleEncoderDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$nextInChain$VH() { return WGPURenderBundleEncoderDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$label$LAYOUT() { return WGPURenderBundleEncoderDescriptor$label$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$label$VH() { return WGPURenderBundleEncoderDescriptor$label$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$colorFormatsCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$colorFormatsCount$LAYOUT() { return WGPURenderBundleEncoderDescriptor$colorFormatsCount$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$colorFormatsCount$VH_ = WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("colorFormatsCount"));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$colorFormatsCount$VH() { return WGPURenderBundleEncoderDescriptor$colorFormatsCount$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$colorFormats$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$colorFormats$LAYOUT() { return WGPURenderBundleEncoderDescriptor$colorFormats$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$colorFormats$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("colorFormats")));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$colorFormats$VH() { return WGPURenderBundleEncoderDescriptor$colorFormats$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$depthStencilFormat$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$depthStencilFormat$LAYOUT() { return WGPURenderBundleEncoderDescriptor$depthStencilFormat$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$depthStencilFormat$VH_ = WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("depthStencilFormat"));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$depthStencilFormat$VH() { return WGPURenderBundleEncoderDescriptor$depthStencilFormat$VH_; }

    static final MemoryLayout WGPURenderBundleEncoderDescriptor$sampleCount$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderBundleEncoderDescriptor$sampleCount$LAYOUT() { return WGPURenderBundleEncoderDescriptor$sampleCount$LAYOUT_; }

    static final VarHandle WGPURenderBundleEncoderDescriptor$sampleCount$VH_ = WGPURenderBundleEncoderDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("sampleCount"));
    static final java.lang.invoke.VarHandle WGPURenderBundleEncoderDescriptor$sampleCount$VH() { return WGPURenderBundleEncoderDescriptor$sampleCount$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("attachment"),
        C_INT.withName("depthLoadOp"),
        C_INT.withName("depthStoreOp"),
        C_FLOAT.withName("clearDepth"),
        C_CHAR.withName("depthReadOnly"),
        MemoryLayout.ofPaddingBits(24),
        C_INT.withName("stencilLoadOp"),
        C_INT.withName("stencilStoreOp"),
        C_INT.withName("clearStencil"),
        C_CHAR.withName("stencilReadOnly"),
        MemoryLayout.ofPaddingBits(24)
    ).withName("WGPURenderPassDepthStencilAttachmentDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$attachment$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$attachment$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$attachment$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$attachment$VH_ = MemoryHandles.asAddressVarHandle(WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("attachment")));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$attachment$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$attachment$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("depthLoadOp"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthLoadOp$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("depthStoreOp"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthStoreOp$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("clearDepth"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$clearDepth$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("depthReadOnly"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$depthReadOnly$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("stencilLoadOp"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilLoadOp$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("stencilStoreOp"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilStoreOp$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("clearStencil"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$clearStencil$VH_; }

    static final MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$LAYOUT_ = C_CHAR;
    static final jdk.incubator.foreign.MemoryLayout WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$LAYOUT() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$LAYOUT_; }

    static final VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$VH_ = WGPURenderPassDepthStencilAttachmentDescriptor$struct$LAYOUT_.varHandle(byte.class, MemoryLayout.PathElement.groupElement("stencilReadOnly"));
    static final java.lang.invoke.VarHandle WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$VH() { return WGPURenderPassDepthStencilAttachmentDescriptor$stencilReadOnly$VH_; }

    static final MemoryLayout WGPURequestAdapterOptions$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("compatibleSurface")
    ).withName("WGPURequestAdapterOptions");
    static final jdk.incubator.foreign.MemoryLayout WGPURequestAdapterOptions$struct$LAYOUT() { return WGPURequestAdapterOptions$struct$LAYOUT_; }

    static final MemoryLayout WGPURequestAdapterOptions$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURequestAdapterOptions$nextInChain$LAYOUT() { return WGPURequestAdapterOptions$nextInChain$LAYOUT_; }

    static final VarHandle WGPURequestAdapterOptions$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPURequestAdapterOptions$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPURequestAdapterOptions$nextInChain$VH() { return WGPURequestAdapterOptions$nextInChain$VH_; }

    static final MemoryLayout WGPURequestAdapterOptions$compatibleSurface$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPURequestAdapterOptions$compatibleSurface$LAYOUT() { return WGPURequestAdapterOptions$compatibleSurface$LAYOUT_; }

    static final VarHandle WGPURequestAdapterOptions$compatibleSurface$VH_ = MemoryHandles.asAddressVarHandle(WGPURequestAdapterOptions$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("compatibleSurface")));
    static final java.lang.invoke.VarHandle WGPURequestAdapterOptions$compatibleSurface$VH() { return WGPURequestAdapterOptions$compatibleSurface$VH_; }

    static final MemoryLayout WGPUSamplerBindingLayout$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("type"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUSamplerBindingLayout");
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerBindingLayout$struct$LAYOUT() { return WGPUSamplerBindingLayout$struct$LAYOUT_; }

    static final MemoryLayout WGPUSamplerBindingLayout$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerBindingLayout$nextInChain$LAYOUT() { return WGPUSamplerBindingLayout$nextInChain$LAYOUT_; }

    static final VarHandle WGPUSamplerBindingLayout$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUSamplerBindingLayout$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUSamplerBindingLayout$nextInChain$VH() { return WGPUSamplerBindingLayout$nextInChain$VH_; }

    static final MemoryLayout WGPUSamplerBindingLayout$type$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerBindingLayout$type$LAYOUT() { return WGPUSamplerBindingLayout$type$LAYOUT_; }

    static final VarHandle WGPUSamplerBindingLayout$type$VH_ = WGPUSamplerBindingLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("type"));
    static final java.lang.invoke.VarHandle WGPUSamplerBindingLayout$type$VH() { return WGPUSamplerBindingLayout$type$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("addressModeU"),
        C_INT.withName("addressModeV"),
        C_INT.withName("addressModeW"),
        C_INT.withName("magFilter"),
        C_INT.withName("minFilter"),
        C_INT.withName("mipmapFilter"),
        C_FLOAT.withName("lodMinClamp"),
        C_FLOAT.withName("lodMaxClamp"),
        C_INT.withName("compare"),
        C_SHORT.withName("maxAnisotropy"),
        MemoryLayout.ofPaddingBits(16)
    ).withName("WGPUSamplerDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$struct$LAYOUT() { return WGPUSamplerDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUSamplerDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$nextInChain$LAYOUT() { return WGPUSamplerDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$nextInChain$VH() { return WGPUSamplerDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$label$LAYOUT() { return WGPUSamplerDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$label$VH() { return WGPUSamplerDescriptor$label$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$addressModeU$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$addressModeU$LAYOUT() { return WGPUSamplerDescriptor$addressModeU$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$addressModeU$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("addressModeU"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$addressModeU$VH() { return WGPUSamplerDescriptor$addressModeU$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$addressModeV$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$addressModeV$LAYOUT() { return WGPUSamplerDescriptor$addressModeV$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$addressModeV$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("addressModeV"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$addressModeV$VH() { return WGPUSamplerDescriptor$addressModeV$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$addressModeW$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$addressModeW$LAYOUT() { return WGPUSamplerDescriptor$addressModeW$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$addressModeW$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("addressModeW"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$addressModeW$VH() { return WGPUSamplerDescriptor$addressModeW$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$magFilter$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$magFilter$LAYOUT() { return WGPUSamplerDescriptor$magFilter$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$magFilter$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("magFilter"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$magFilter$VH() { return WGPUSamplerDescriptor$magFilter$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$minFilter$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$minFilter$LAYOUT() { return WGPUSamplerDescriptor$minFilter$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$minFilter$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("minFilter"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$minFilter$VH() { return WGPUSamplerDescriptor$minFilter$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$mipmapFilter$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$mipmapFilter$LAYOUT() { return WGPUSamplerDescriptor$mipmapFilter$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$mipmapFilter$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("mipmapFilter"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$mipmapFilter$VH() { return WGPUSamplerDescriptor$mipmapFilter$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$lodMinClamp$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$lodMinClamp$LAYOUT() { return WGPUSamplerDescriptor$lodMinClamp$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$lodMinClamp$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("lodMinClamp"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$lodMinClamp$VH() { return WGPUSamplerDescriptor$lodMinClamp$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$lodMaxClamp$LAYOUT_ = C_FLOAT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$lodMaxClamp$LAYOUT() { return WGPUSamplerDescriptor$lodMaxClamp$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$lodMaxClamp$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(float.class, MemoryLayout.PathElement.groupElement("lodMaxClamp"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$lodMaxClamp$VH() { return WGPUSamplerDescriptor$lodMaxClamp$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$compare$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$compare$LAYOUT() { return WGPUSamplerDescriptor$compare$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$compare$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("compare"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$compare$VH() { return WGPUSamplerDescriptor$compare$VH_; }

    static final MemoryLayout WGPUSamplerDescriptor$maxAnisotropy$LAYOUT_ = C_SHORT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSamplerDescriptor$maxAnisotropy$LAYOUT() { return WGPUSamplerDescriptor$maxAnisotropy$LAYOUT_; }

    static final VarHandle WGPUSamplerDescriptor$maxAnisotropy$VH_ = WGPUSamplerDescriptor$struct$LAYOUT_.varHandle(short.class, MemoryLayout.PathElement.groupElement("maxAnisotropy"));
    static final java.lang.invoke.VarHandle WGPUSamplerDescriptor$maxAnisotropy$VH() { return WGPUSamplerDescriptor$maxAnisotropy$VH_; }

    static final MemoryLayout WGPUShaderModuleDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPUShaderModuleDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleDescriptor$struct$LAYOUT() { return WGPUShaderModuleDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUShaderModuleDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleDescriptor$nextInChain$LAYOUT() { return WGPUShaderModuleDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUShaderModuleDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUShaderModuleDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUShaderModuleDescriptor$nextInChain$VH() { return WGPUShaderModuleDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUShaderModuleDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleDescriptor$label$LAYOUT() { return WGPUShaderModuleDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUShaderModuleDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUShaderModuleDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUShaderModuleDescriptor$label$VH() { return WGPUShaderModuleDescriptor$label$VH_; }

    static final MemoryLayout WGPUShaderModuleSPIRVDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_INT.withName("codeSize"),
        MemoryLayout.ofPaddingBits(32),
        C_POINTER.withName("code")
    ).withName("WGPUShaderModuleSPIRVDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleSPIRVDescriptor$struct$LAYOUT() { return WGPUShaderModuleSPIRVDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUShaderModuleSPIRVDescriptor$codeSize$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleSPIRVDescriptor$codeSize$LAYOUT() { return WGPUShaderModuleSPIRVDescriptor$codeSize$LAYOUT_; }

    static final VarHandle WGPUShaderModuleSPIRVDescriptor$codeSize$VH_ = WGPUShaderModuleSPIRVDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("codeSize"));
    static final java.lang.invoke.VarHandle WGPUShaderModuleSPIRVDescriptor$codeSize$VH() { return WGPUShaderModuleSPIRVDescriptor$codeSize$VH_; }

    static final MemoryLayout WGPUShaderModuleSPIRVDescriptor$code$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleSPIRVDescriptor$code$LAYOUT() { return WGPUShaderModuleSPIRVDescriptor$code$LAYOUT_; }

    static final VarHandle WGPUShaderModuleSPIRVDescriptor$code$VH_ = MemoryHandles.asAddressVarHandle(WGPUShaderModuleSPIRVDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("code")));
    static final java.lang.invoke.VarHandle WGPUShaderModuleSPIRVDescriptor$code$VH() { return WGPUShaderModuleSPIRVDescriptor$code$VH_; }

    static final MemoryLayout WGPUShaderModuleWGSLDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_POINTER.withName("source")
    ).withName("WGPUShaderModuleWGSLDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleWGSLDescriptor$struct$LAYOUT() { return WGPUShaderModuleWGSLDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUShaderModuleWGSLDescriptor$source$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUShaderModuleWGSLDescriptor$source$LAYOUT() { return WGPUShaderModuleWGSLDescriptor$source$LAYOUT_; }

    static final VarHandle WGPUShaderModuleWGSLDescriptor$source$VH_ = MemoryHandles.asAddressVarHandle(WGPUShaderModuleWGSLDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("source")));
    static final java.lang.invoke.VarHandle WGPUShaderModuleWGSLDescriptor$source$VH() { return WGPUShaderModuleWGSLDescriptor$source$VH_; }

    static final MemoryLayout WGPUStencilFaceState$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_INT.withName("compare"),
        C_INT.withName("failOp"),
        C_INT.withName("depthFailOp"),
        C_INT.withName("passOp")
    ).withName("WGPUStencilFaceState");
    static final jdk.incubator.foreign.MemoryLayout WGPUStencilFaceState$struct$LAYOUT() { return WGPUStencilFaceState$struct$LAYOUT_; }

    static final MemoryLayout WGPUStencilFaceState$compare$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStencilFaceState$compare$LAYOUT() { return WGPUStencilFaceState$compare$LAYOUT_; }

    static final VarHandle WGPUStencilFaceState$compare$VH_ = WGPUStencilFaceState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("compare"));
    static final java.lang.invoke.VarHandle WGPUStencilFaceState$compare$VH() { return WGPUStencilFaceState$compare$VH_; }

    static final MemoryLayout WGPUStencilFaceState$failOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStencilFaceState$failOp$LAYOUT() { return WGPUStencilFaceState$failOp$LAYOUT_; }

    static final VarHandle WGPUStencilFaceState$failOp$VH_ = WGPUStencilFaceState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("failOp"));
    static final java.lang.invoke.VarHandle WGPUStencilFaceState$failOp$VH() { return WGPUStencilFaceState$failOp$VH_; }

    static final MemoryLayout WGPUStencilFaceState$depthFailOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStencilFaceState$depthFailOp$LAYOUT() { return WGPUStencilFaceState$depthFailOp$LAYOUT_; }

    static final VarHandle WGPUStencilFaceState$depthFailOp$VH_ = WGPUStencilFaceState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("depthFailOp"));
    static final java.lang.invoke.VarHandle WGPUStencilFaceState$depthFailOp$VH() { return WGPUStencilFaceState$depthFailOp$VH_; }

    static final MemoryLayout WGPUStencilFaceState$passOp$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStencilFaceState$passOp$LAYOUT() { return WGPUStencilFaceState$passOp$LAYOUT_; }

    static final VarHandle WGPUStencilFaceState$passOp$VH_ = WGPUStencilFaceState$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("passOp"));
    static final java.lang.invoke.VarHandle WGPUStencilFaceState$passOp$VH() { return WGPUStencilFaceState$passOp$VH_; }

    static final MemoryLayout WGPUStorageTextureBindingLayout$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_INT.withName("access"),
        C_INT.withName("format"),
        C_INT.withName("viewDimension"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUStorageTextureBindingLayout");
    static final jdk.incubator.foreign.MemoryLayout WGPUStorageTextureBindingLayout$struct$LAYOUT() { return WGPUStorageTextureBindingLayout$struct$LAYOUT_; }

    static final MemoryLayout WGPUStorageTextureBindingLayout$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUStorageTextureBindingLayout$nextInChain$LAYOUT() { return WGPUStorageTextureBindingLayout$nextInChain$LAYOUT_; }

    static final VarHandle WGPUStorageTextureBindingLayout$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUStorageTextureBindingLayout$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUStorageTextureBindingLayout$nextInChain$VH() { return WGPUStorageTextureBindingLayout$nextInChain$VH_; }

    static final MemoryLayout WGPUStorageTextureBindingLayout$access$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStorageTextureBindingLayout$access$LAYOUT() { return WGPUStorageTextureBindingLayout$access$LAYOUT_; }

    static final VarHandle WGPUStorageTextureBindingLayout$access$VH_ = WGPUStorageTextureBindingLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("access"));
    static final java.lang.invoke.VarHandle WGPUStorageTextureBindingLayout$access$VH() { return WGPUStorageTextureBindingLayout$access$VH_; }

    static final MemoryLayout WGPUStorageTextureBindingLayout$format$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStorageTextureBindingLayout$format$LAYOUT() { return WGPUStorageTextureBindingLayout$format$LAYOUT_; }

    static final VarHandle WGPUStorageTextureBindingLayout$format$VH_ = WGPUStorageTextureBindingLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("format"));
    static final java.lang.invoke.VarHandle WGPUStorageTextureBindingLayout$format$VH() { return WGPUStorageTextureBindingLayout$format$VH_; }

    static final MemoryLayout WGPUStorageTextureBindingLayout$viewDimension$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUStorageTextureBindingLayout$viewDimension$LAYOUT() { return WGPUStorageTextureBindingLayout$viewDimension$LAYOUT_; }

    static final VarHandle WGPUStorageTextureBindingLayout$viewDimension$VH_ = WGPUStorageTextureBindingLayout$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("viewDimension"));
    static final java.lang.invoke.VarHandle WGPUStorageTextureBindingLayout$viewDimension$VH() { return WGPUStorageTextureBindingLayout$viewDimension$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label")
    ).withName("WGPUSurfaceDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptor$struct$LAYOUT() { return WGPUSurfaceDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUSurfaceDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptor$nextInChain$LAYOUT() { return WGPUSurfaceDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptor$nextInChain$VH() { return WGPUSurfaceDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptor$label$LAYOUT() { return WGPUSurfaceDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptor$label$VH() { return WGPUSurfaceDescriptor$label$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromCanvasHTMLSelector$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_POINTER.withName("selector")
    ).withName("WGPUSurfaceDescriptorFromCanvasHTMLSelector");
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromCanvasHTMLSelector$struct$LAYOUT() { return WGPUSurfaceDescriptorFromCanvasHTMLSelector$struct$LAYOUT_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$LAYOUT() { return WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptorFromCanvasHTMLSelector$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("selector")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$VH() { return WGPUSurfaceDescriptorFromCanvasHTMLSelector$selector$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromMetalLayer$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_POINTER.withName("layer")
    ).withName("WGPUSurfaceDescriptorFromMetalLayer");
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromMetalLayer$struct$LAYOUT() { return WGPUSurfaceDescriptorFromMetalLayer$struct$LAYOUT_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromMetalLayer$layer$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromMetalLayer$layer$LAYOUT() { return WGPUSurfaceDescriptorFromMetalLayer$layer$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromMetalLayer$layer$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptorFromMetalLayer$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("layer")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromMetalLayer$layer$VH() { return WGPUSurfaceDescriptorFromMetalLayer$layer$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_POINTER.withName("hinstance"),
        C_POINTER.withName("hwnd")
    ).withName("WGPUSurfaceDescriptorFromWindowsHWND");
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$struct$LAYOUT() { return WGPUSurfaceDescriptorFromWindowsHWND$struct$LAYOUT_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$hinstance$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$hinstance$LAYOUT() { return WGPUSurfaceDescriptorFromWindowsHWND$hinstance$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromWindowsHWND$hinstance$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptorFromWindowsHWND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hinstance")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromWindowsHWND$hinstance$VH() { return WGPUSurfaceDescriptorFromWindowsHWND$hinstance$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$hwnd$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromWindowsHWND$hwnd$LAYOUT() { return WGPUSurfaceDescriptorFromWindowsHWND$hwnd$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromWindowsHWND$hwnd$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptorFromWindowsHWND$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("hwnd")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromWindowsHWND$hwnd$VH() { return WGPUSurfaceDescriptorFromWindowsHWND$hwnd$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromXlib$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            C_POINTER.withName("next"),
            C_INT.withName("sType"),
            MemoryLayout.ofPaddingBits(32)
        ).withName("chain"),
        C_POINTER.withName("display"),
        C_INT.withName("window"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUSurfaceDescriptorFromXlib");
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromXlib$struct$LAYOUT() { return WGPUSurfaceDescriptorFromXlib$struct$LAYOUT_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromXlib$display$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromXlib$display$LAYOUT() { return WGPUSurfaceDescriptorFromXlib$display$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromXlib$display$VH_ = MemoryHandles.asAddressVarHandle(WGPUSurfaceDescriptorFromXlib$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("display")));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromXlib$display$VH() { return WGPUSurfaceDescriptorFromXlib$display$VH_; }

    static final MemoryLayout WGPUSurfaceDescriptorFromXlib$window$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSurfaceDescriptorFromXlib$window$LAYOUT() { return WGPUSurfaceDescriptorFromXlib$window$LAYOUT_; }

    static final VarHandle WGPUSurfaceDescriptorFromXlib$window$VH_ = WGPUSurfaceDescriptorFromXlib$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("window"));
    static final java.lang.invoke.VarHandle WGPUSurfaceDescriptorFromXlib$window$VH() { return WGPUSurfaceDescriptorFromXlib$window$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("nextInChain"),
        C_POINTER.withName("label"),
        C_INT.withName("usage"),
        C_INT.withName("format"),
        C_INT.withName("width"),
        C_INT.withName("height"),
        C_INT.withName("presentMode"),
        MemoryLayout.ofPaddingBits(32)
    ).withName("WGPUSwapChainDescriptor");
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$struct$LAYOUT() { return WGPUSwapChainDescriptor$struct$LAYOUT_; }

    static final MemoryLayout WGPUSwapChainDescriptor$nextInChain$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$nextInChain$LAYOUT() { return WGPUSwapChainDescriptor$nextInChain$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$nextInChain$VH_ = MemoryHandles.asAddressVarHandle(WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("nextInChain")));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$nextInChain$VH() { return WGPUSwapChainDescriptor$nextInChain$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$label$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$label$LAYOUT() { return WGPUSwapChainDescriptor$label$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$label$VH_ = MemoryHandles.asAddressVarHandle(WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("label")));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$label$VH() { return WGPUSwapChainDescriptor$label$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$usage$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$usage$LAYOUT() { return WGPUSwapChainDescriptor$usage$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$usage$VH_ = WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("usage"));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$usage$VH() { return WGPUSwapChainDescriptor$usage$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$format$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$format$LAYOUT() { return WGPUSwapChainDescriptor$format$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$format$VH_ = WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("format"));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$format$VH() { return WGPUSwapChainDescriptor$format$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$width$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$width$LAYOUT() { return WGPUSwapChainDescriptor$width$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$width$VH_ = WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("width"));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$width$VH() { return WGPUSwapChainDescriptor$width$VH_; }

    static final MemoryLayout WGPUSwapChainDescriptor$height$LAYOUT_ = C_INT;
    static final jdk.incubator.foreign.MemoryLayout WGPUSwapChainDescriptor$height$LAYOUT() { return WGPUSwapChainDescriptor$height$LAYOUT_; }

    static final VarHandle WGPUSwapChainDescriptor$height$VH_ = WGPUSwapChainDescriptor$struct$LAYOUT_.varHandle(int.class, MemoryLayout.PathElement.groupElement("height"));
    static final java.lang.invoke.VarHandle WGPUSwapChainDescriptor$height$VH() { return WGPUSwapChainDescriptor$height$VH_; }

}

