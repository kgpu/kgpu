package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRawPass extends WgpuJavaStruct {

    private final Struct.Pointer data = new Struct.Pointer();
    private final Struct.Pointer base = new Struct.Pointer();
    private final Struct.Unsigned64 capacity = new Struct.Unsigned64();
    private final Struct.Unsigned64 parent = new Struct.Unsigned64();

    private WgpuRawPass(){}

    @Deprecated
    public WgpuRawPass(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuRawPass createHeap(){
        return new WgpuRawPass();
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuRawPass createDirect(){
        var struct = new WgpuRawPass();
        struct.useDirectMemory();
        return struct;
    }


    public jnr.ffi.Pointer getData(){
        return data.get();
    }

    public void setData(jnr.ffi.Pointer x){
        this.data.set(x);
    }

    public jnr.ffi.Pointer getBase(){
        return base.get();
    }

    public void setBase(jnr.ffi.Pointer x){
        this.base.set(x);
    }

    public long getCapacity(){
        return capacity.get();
    }

    public void setCapacity(long x){
        this.capacity.set(x);
    }

    public long getParent(){
        return parent.get();
    }

    public void setParent(long x){
        this.parent.set(x);
    }

}