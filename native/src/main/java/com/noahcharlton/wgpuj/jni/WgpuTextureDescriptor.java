package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import com.noahcharlton.wgpuj.util.CStrPointer;
import com.noahcharlton.wgpuj.util.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuTextureDescriptor extends WgpuJavaStruct {

    private final @CStrPointer Struct.Pointer label = new Struct.Pointer();
    private final WgpuExtent3d size = inner(WgpuExtent3d.createHeap());
    private final Struct.Unsigned32 mipLevelCount = new Struct.Unsigned32();
    private final Struct.Unsigned32 sampleCount = new Struct.Unsigned32();
    private final Struct.Enum<WgpuTextureDimension> dimension = new Struct.Enum<>(WgpuTextureDimension.class);
    private final Struct.Enum<WgpuTextureFormat> format = new Struct.Enum<>(WgpuTextureFormat.class);
    private final Struct.Unsigned32 usage = new Struct.Unsigned32();

    private WgpuTextureDescriptor(){}

    @Deprecated
    public WgpuTextureDescriptor(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuTextureDescriptor createHeap(){
        return new WgpuTextureDescriptor();
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuTextureDescriptor createDirect(){
        var struct = new WgpuTextureDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x){
        this.label.set(RustCString.toPointer(x));
    }

    public WgpuExtent3d getSize(){
        return size;
    }

    public long getMipLevelCount(){
        return mipLevelCount.get();
    }

    public void setMipLevelCount(long x){
        this.mipLevelCount.set(x);
    }

    public long getSampleCount(){
        return sampleCount.get();
    }

    public void setSampleCount(long x){
        this.sampleCount.set(x);
    }

    public WgpuTextureDimension getDimension(){
        return dimension.get();
    }

    public void setDimension(WgpuTextureDimension x){
        this.dimension.set(x);
    }

    public WgpuTextureFormat getFormat(){
        return format.get();
    }

    public void setFormat(WgpuTextureFormat x){
        this.format.set(x);
    }

    public long getUsage(){
        return usage.get();
    }

    public void setUsage(long x){
        this.usage.set(x);
    }

}