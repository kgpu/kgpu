package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRenderPassColorDescriptor extends WgpuJavaStruct {

    private final Struct.Unsigned64 attachment = new Struct.Unsigned64();
    private final Struct.Unsigned64 resolveTarget = new Struct.Unsigned64();
    private final Struct.Enum<WgpuLoadOp> loadOp = new Struct.Enum<>(WgpuLoadOp.class);
    private final Struct.Enum<WgpuStoreOp> storeOp = new Struct.Enum<>(WgpuStoreOp.class);
    private final WgpuColor clearColor = inner(WgpuColor.createHeap());

    private WgpuRenderPassColorDescriptor(){}

    @Deprecated
    public WgpuRenderPassColorDescriptor(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuRenderPassColorDescriptor createHeap(){
        return new WgpuRenderPassColorDescriptor();
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuRenderPassColorDescriptor createDirect(){
        var struct = new WgpuRenderPassColorDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public long getAttachment(){
        return attachment.get();
    }

    public void setAttachment(long x){
        this.attachment.set(x);
    }

    public long getResolveTarget(){
        return resolveTarget.get();
    }

    public void setResolveTarget(long x){
        this.resolveTarget.set(x);
    }

    public WgpuLoadOp getLoadOp(){
        return loadOp.get();
    }

    public void setLoadOp(WgpuLoadOp x){
        this.loadOp.set(x);
    }

    public WgpuStoreOp getStoreOp(){
        return storeOp.get();
    }

    public void setStoreOp(WgpuStoreOp x){
        this.storeOp.set(x);
    }

    public WgpuColor getClearColor(){
        return clearColor;
    }

}