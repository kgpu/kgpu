package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuComputePipelineDescriptor extends WgpuJavaStruct {

    private final Struct.Unsigned64 layout = new Struct.Unsigned64();
    private final WgpuProgrammableStageDescriptor computeStage = inner(WgpuProgrammableStageDescriptor.createHeap());

    private WgpuComputePipelineDescriptor(){}

    @Deprecated
    public WgpuComputePipelineDescriptor(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuComputePipelineDescriptor createHeap(){
        return new WgpuComputePipelineDescriptor();
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuComputePipelineDescriptor createDirect(){
        var struct = new WgpuComputePipelineDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public long getLayout(){
        return layout.get();
    }

    public void setLayout(long x){
        this.layout.set(x);
    }

    public WgpuProgrammableStageDescriptor getComputeStage(){
        return computeStage;
    }

}