package com.noahcharlton.wgpuj.jni;

import com.noahcharlton.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRasterizationStateDescriptor extends WgpuJavaStruct {

    private final Struct.Enum<WgpuFrontFace> frontFace = new Struct.Enum<>(WgpuFrontFace.class);
    private final Struct.Enum<WgpuCullMode> cullMode = new Struct.Enum<>(WgpuCullMode.class);
    private final Struct.Signed32 depthBias = new Struct.Signed32();
    private final Struct.Float depthBiasSlopeScale = new Struct.Float();
    private final Struct.Float depthBiasClamp = new Struct.Float();

    private WgpuRasterizationStateDescriptor(){}

    @Deprecated
    public WgpuRasterizationStateDescriptor(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuRasterizationStateDescriptor createHeap(){
        return new WgpuRasterizationStateDescriptor();
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuRasterizationStateDescriptor createDirect(){
        var struct = new WgpuRasterizationStateDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public WgpuFrontFace getFrontFace(){
        return frontFace.get();
    }

    public void setFrontFace(WgpuFrontFace x){
        this.frontFace.set(x);
    }

    public WgpuCullMode getCullMode(){
        return cullMode.get();
    }

    public void setCullMode(WgpuCullMode x){
        this.cullMode.set(x);
    }

    public int getDepthBias(){
        return depthBias.get();
    }

    public void setDepthBias(int x){
        this.depthBias.set(x);
    }

    public float getDepthBiasSlopeScale(){
        return depthBiasSlopeScale.get();
    }

    public void setDepthBiasSlopeScale(float x){
        this.depthBiasSlopeScale.set(x);
    }

    public float getDepthBiasClamp(){
        return depthBiasClamp.get();
    }

    public void setDepthBiasClamp(float x){
        this.depthBiasClamp.set(x);
    }

}