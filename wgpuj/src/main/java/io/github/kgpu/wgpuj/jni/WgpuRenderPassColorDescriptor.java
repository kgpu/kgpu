package io.github.kgpu.wgpuj.jni;

import io.github.kgpu.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRenderPassColorDescriptor extends WgpuJavaStruct {

    private final Struct.Unsigned64 attachment = new Struct.Unsigned64();
    private final Struct.Unsigned64 resolveTarget = new Struct.Unsigned64();
    private final WgpuPassChannel_Color channel = inner(WgpuPassChannel_Color.createHeap());

    protected WgpuRenderPassColorDescriptor(boolean direct){
         if(direct){
             useDirectMemory();
        }
    }

    @Deprecated
    public WgpuRenderPassColorDescriptor(Runtime runtime){
        super(runtime);
    }

    /**
    * Creates this struct on the java heap.
    * In general, this should <b>not</b> be used because these structs
    * cannot be directly passed into native code. 
    */
    public static WgpuRenderPassColorDescriptor createHeap(){
        return new WgpuRenderPassColorDescriptor(false);
    }

    /**
    * Creates this struct in direct memory.
    * This is how most structs should be created (unless, they
    * are members of a nothing struct)
    * 
    * @see WgpuJavaStruct#useDirectMemory
    */
    public static WgpuRenderPassColorDescriptor createDirect(){
        return new WgpuRenderPassColorDescriptor(true);
    }


    public long getAttachment(){
        return attachment.get();
    }

    public void setAttachment(long x){
        this.attachment.set(x);
    }

    public long getResolveTarget(){
        return resolveTarget.get();
    }

    public void setResolveTarget(long x){
        this.resolveTarget.set(x);
    }

    public WgpuPassChannel_Color getChannel(){
        return channel;
    }

}