package io.github.kgpu.wgpuj.jni;

import io.github.kgpu.wgpuj.util.CStrPointer;
import io.github.kgpu.wgpuj.util.RustCString;
import io.github.kgpu.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuRenderBundleDescriptor_Label extends WgpuJavaStruct {

    private final @CStrPointer Struct.Pointer label = new Struct.Pointer();

    protected WgpuRenderBundleDescriptor_Label(boolean direct) {
        if (direct) {
            useDirectMemory();
        }
    }

    @Deprecated
    public WgpuRenderBundleDescriptor_Label(Runtime runtime) {
        super(runtime);
    }

    /**
     * Creates this struct on the java heap. In general, this should <b>not</b> be used because
     * these structs cannot be directly passed into native code.
     */
    public static WgpuRenderBundleDescriptor_Label createHeap() {
        return new WgpuRenderBundleDescriptor_Label(false);
    }

    /**
     * Creates this struct in direct memory. This is how most structs should be created (unless,
     * they are members of a nothing struct)
     *
     * @see WgpuJavaStruct#useDirectMemory
     */
    public static WgpuRenderBundleDescriptor_Label createDirect() {
        return new WgpuRenderBundleDescriptor_Label(true);
    }

    public java.lang.String getLabel() {
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x) {
        this.label.set(RustCString.toPointer(x));
    }
}
