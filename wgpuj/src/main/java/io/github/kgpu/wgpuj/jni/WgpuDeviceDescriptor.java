package io.github.kgpu.wgpuj.jni;

import io.github.kgpu.wgpuj.util.CStrPointer;
import io.github.kgpu.wgpuj.util.RustCString;
import io.github.kgpu.wgpuj.util.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WgpuDeviceDescriptor extends WgpuJavaStruct {

    private final @CStrPointer Struct.Pointer label = new Struct.Pointer();
    private final Struct.Unsigned64 features = new Struct.Unsigned64();
    private final WgpuCLimits limits = inner(WgpuCLimits.createHeap());
    private final Struct.Boolean shaderValidation = new Struct.Boolean();
    private final @CStrPointer Struct.Pointer tracePath = new Struct.Pointer();

    protected WgpuDeviceDescriptor(boolean direct) {
        if (direct) {
            useDirectMemory();
        }
    }

    @Deprecated
    public WgpuDeviceDescriptor(Runtime runtime) {
        super(runtime);
    }

    /**
     * Creates this struct on the java heap. In general, this should <b>not</b> be used because
     * these structs cannot be directly passed into native code.
     */
    public static WgpuDeviceDescriptor createHeap() {
        return new WgpuDeviceDescriptor(false);
    }

    /**
     * Creates this struct in direct memory. This is how most structs should be created (unless,
     * they are members of a nothing struct)
     *
     * @see WgpuJavaStruct#useDirectMemory
     */
    public static WgpuDeviceDescriptor createDirect() {
        return new WgpuDeviceDescriptor(true);
    }

    public java.lang.String getLabel() {
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x) {
        this.label.set(RustCString.toPointer(x));
    }

    public long getFeatures() {
        return features.get();
    }

    public void setFeatures(long x) {
        this.features.set(x);
    }

    public WgpuCLimits getLimits() {
        return limits;
    }

    public boolean getShaderValidation() {
        return shaderValidation.get();
    }

    public void setShaderValidation(boolean x) {
        this.shaderValidation.set(x);
    }

    public java.lang.String getTracePath() {
        return RustCString.fromPointer(tracePath.get());
    }

    public void setTracePath(java.lang.String x) {
        this.tracePath.set(RustCString.toPointer(x));
    }
}
