package io.github.kgpu.wgpuj.jni;


/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public enum WgpuTextureFormat {
     /**
       * Red channel only. 8 bit integer per channel. [0, 255] converted to/from float [0, 1] in shader.
       */
    R8_UNORM,
     /**
       * Red channel only. 8 bit integer per channel. [-127, 127] converted to/from float [-1, 1] in shader.
       */
    R8_SNORM,
     /**
       * Red channel only. 8 bit integer per channel. Unsigned in shader.
       */
    R8_UINT,
     /**
       * Red channel only. 8 bit integer per channel. Signed in shader.
       */
    R8_SINT,
     /**
       * Red channel only. 16 bit integer per channel. Unsigned in shader.
       */
    R16_UINT,
     /**
       * Red channel only. 16 bit integer per channel. Signed in shader.
       */
    R16_SINT,
     /**
       * Red channel only. 16 bit float per channel. Float in shader.
       */
    R16_FLOAT,
     /**
       * Red and green channels. 8 bit integer per channel. [0, 255] converted to/from float [0, 1] in shader.
       */
    RG8_UNORM,
     /**
       * Red and green channels. 8 bit integer per channel. [-127, 127] converted to/from float [-1, 1] in shader.
       */
    RG8_SNORM,
     /**
       * Red and green channels. 8 bit integer per channel. Unsigned in shader.
       */
    RG8_UINT,
     /**
       * Red and green channel s. 8 bit integer per channel. Signed in shader.
       */
    RG8_SINT,
     /**
       * Red channel only. 32 bit integer per channel. Unsigned in shader.
       */
    R32_UINT,
     /**
       * Red channel only. 32 bit integer per channel. Signed in shader.
       */
    R32_SINT,
     /**
       * Red channel only. 32 bit float per channel. Float in shader.
       */
    R32_FLOAT,
     /**
       * Red and green channels. 16 bit integer per channel. Unsigned in shader.
       */
    RG16_UINT,
     /**
       * Red and green channels. 16 bit integer per channel. Signed in shader.
       */
    RG16_SINT,
     /**
       * Red and green channels. 16 bit float per channel. Float in shader.
       */
    RG16_FLOAT,
     /**
       * Red, green, blue, and alpha channels. 8 bit integer per channel. [0, 255] converted to/from float [0, 1] in shader.
       */
    RGBA8_UNORM,
     /**
       * Red, green, blue, and alpha channels. 8 bit integer per channel. Srgb-color [0, 255] converted to/from linear-color float [0, 1] in shader.
       */
    RGBA8_UNORM_SRGB,
     /**
       * Red, green, blue, and alpha channels. 8 bit integer per channel. [-127, 127] converted to/from float [-1, 1] in shader.
       */
    RGBA8_SNORM,
     /**
       * Red, green, blue, and alpha channels. 8 bit integer per channel. Unsigned in shader.
       */
    RGBA8_UINT,
     /**
       * Red, green, blue, and alpha channels. 8 bit integer per channel. Signed in shader.
       */
    RGBA8_SINT,
     /**
       * Blue, green, red, and alpha channels. 8 bit integer per channel. [0, 255] converted to/from float [0, 1] in shader.
       */
    BGRA8_UNORM,
     /**
       * Blue, green, red, and alpha channels. 8 bit integer per channel. Srgb-color [0, 255] converted to/from linear-color float [0, 1] in shader.
       */
    BGRA8_UNORM_SRGB,
     /**
       * Red, green, blue, and alpha channels. 10 bit integer for RGB channels, 2 bit integer for alpha channel. [0, 1023] ([0, 3] for alpha) converted to/from float [0, 1] in shader.
       */
    RGB10A2_UNORM,
     /**
       * Red, green, and blue channels. 11 bit float with no sign bit for RG channels. 10 bit float with no sign bit for blue channel. Float in shader.
       */
    RG11B10_FLOAT,
     /**
       * Red and green channels. 32 bit integer per channel. Unsigned in shader.
       */
    RG32_UINT,
     /**
       * Red and green channels. 32 bit integer per channel. Signed in shader.
       */
    RG32_SINT,
     /**
       * Red and green channels. 32 bit float per channel. Float in shader.
       */
    RG32_FLOAT,
     /**
       * Red, green, blue, and alpha channels. 16 bit integer per channel. Unsigned in shader.
       */
    RGBA16_UINT,
     /**
       * Red, green, blue, and alpha channels. 16 bit integer per channel. Signed in shader.
       */
    RGBA16_SINT,
     /**
       * Red, green, blue, and alpha channels. 16 bit float per channel. Float in shader.
       */
    RGBA16_FLOAT,
     /**
       * Red, green, blue, and alpha channels. 32 bit integer per channel. Unsigned in shader.
       */
    RGBA32_UINT,
     /**
       * Red, green, blue, and alpha channels. 32 bit integer per channel. Signed in shader.
       */
    RGBA32_SINT,
     /**
       * Red, green, blue, and alpha channels. 32 bit float per channel. Float in shader.
       */
    RGBA32_FLOAT,
     /**
       * Special depth format with 32 bit floating point depth.
       */
    DEPTH32_FLOAT,
     /**
       * Special depth format with at least 24 bit integer depth.
       */
    DEPTH24_PLUS,
     /**
       * Special depth/stencil format with at least 24 bit integer depth and 8 bits integer stencil.
       */
    DEPTH24_PLUS_STENCIL8,
     /**
       * 4x4 block compressed texture. 8 bytes per block (4 bit/px). 4 color + alpha pallet. 5 bit R + 6 bit G + 5 bit B + 1 bit alpha.
       * [0, 64] ([0, 1] for alpha) converted to/from float [0, 1] in shader.
       *
       * Also known as DXT1.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC1_RGBA_UNORM,
     /**
       * 4x4 block compressed texture. 8 bytes per block (4 bit/px). 4 color + alpha pallet. 5 bit R + 6 bit G + 5 bit B + 1 bit alpha.
       * Srgb-color [0, 64] ([0, 16] for alpha) converted to/from linear-color float [0, 1] in shader.
       *
       * Also known as DXT1.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC1_RGBA_UNORM_SRGB,
     /**
       * 4x4 block compressed texture. 16 bytes per block (8 bit/px). 4 color pallet. 5 bit R + 6 bit G + 5 bit B + 4 bit alpha.
       * [0, 64] ([0, 16] for alpha) converted to/from float [0, 1] in shader.
       *
       * Also known as DXT3.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC2_RGBA_UNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (8 bit/px). 4 color pallet. 5 bit R + 6 bit G + 5 bit B + 4 bit alpha.
       * Srgb-color [0, 64] ([0, 256] for alpha) converted to/from linear-color float [0, 1] in shader.
       *
       * Also known as DXT3.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC2_RGBA_UNORM_SRGB,
     /**
       * 4x4 block compressed texture. 16 bytes per block (8 bit/px). 4 color pallet + 8 alpha pallet. 5 bit R + 6 bit G + 5 bit B + 8 bit alpha.
       * [0, 64] ([0, 256] for alpha) converted to/from float [0, 1] in shader.
       *
       * Also known as DXT5.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC3_RGBA_UNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (8 bit/px). 4 color pallet + 8 alpha pallet. 5 bit R + 6 bit G + 5 bit B + 8 bit alpha.
       * Srgb-color [0, 64] ([0, 256] for alpha) converted to/from linear-color float [0, 1] in shader.
       *
       * Also known as DXT5.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC3_RGBA_UNORM_SRGB,
     /**
       * 4x4 block compressed texture. 8 bytes per block (4 bit/px). 8 color pallet. 8 bit R.
       * [0, 256] converted to/from float [0, 1] in shader.
       *
       * Also known as RGTC1.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC4_R_UNORM,
     /**
       * 4x4 block compressed texture. 8 bytes per block (4 bit/px). 8 color pallet. 8 bit R.
       * [-127, 127] converted to/from float [-1, 1] in shader.
       *
       * Also known as RGTC1.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC4_R_SNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). 8 color red pallet + 8 color green pallet. 8 bit RG.
       * [0, 256] converted to/from float [0, 1] in shader.
       *
       * Also known as RGTC2.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC5_RG_UNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). 8 color red pallet + 8 color green pallet. 8 bit RG.
       * [-127, 127] converted to/from float [-1, 1] in shader.
       *
       * Also known as RGTC2.
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC5_RG_SNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). Variable sized pallet. 16 bit unsigned float RGB. Float in shader.
       *
       * Also known as BPTC (float).
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC6H_RGB_UFLOAT,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). Variable sized pallet. 16 bit signed float RGB. Float in shader.
       *
       * Also known as BPTC (float).
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC6H_RGB_SFLOAT,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). Variable sized pallet. 8 bit integer RGBA.
       * [0, 256] converted to/from float [0, 1] in shader.
       *
       * Also known as BPTC (unorm).
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC7_RGBA_UNORM,
     /**
       * 4x4 block compressed texture. 16 bytes per block (16 bit/px). Variable sized pallet. 8 bit integer RGBA.
       * Srgb-color [0, 255] converted to/from linear-color float [0, 1] in shader.
       *
       * Also known as BPTC (unorm).
       *
       * [`Features::TEXTURE_COMPRESSION_BC`] must be enabled to use this texture format.
       */
    BC7_RGBA_UNORM_SRGB,
}